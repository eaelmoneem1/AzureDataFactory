{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "p21d19901010001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FactEXMSCORE_Gender')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactEXMSCORE_Gender]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactEXMSCORE_Gender"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactEXMSCORE_Gender]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "EXMSCORE_Gender_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EXMSCORE_Gender",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Responses",
											"type": "String"
										},
										"sink": {
											"name": "Responses",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Detractors",
											"type": "String"
										},
										"sink": {
											"name": "Detractors_Percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Passives",
											"type": "String"
										},
										"sink": {
											"name": "Passives_Percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Promoters",
											"type": "String"
										},
										"sink": {
											"name": "Promoters_Percentage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Score",
											"type": "String"
										},
										"sink": {
											"name": "Score",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Avg. Response",
											"type": "String"
										},
										"sink": {
											"name": "Avg_Response",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 0",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_0",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 1",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 2",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 3",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 4",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 5",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_5",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 6",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_6",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 7",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_7",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 8",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_8",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 9",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_9",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Response Distribution 10",
											"type": "String"
										},
										"sink": {
											"name": "Response_Distribution_10",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "EXMSCORE_Gender_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EXMSCORE_Gender_Dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "HR"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactEXMSCORE_Location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"0": "Response_Distribution_0",
									"1": "Response_Distribution_1",
									"2": "Response_Distribution_2",
									"3": "Response_Distribution_3",
									"4": "Response_Distribution_4",
									"5": "Response_Distribution_5",
									"6": "Response_Distribution_6",
									"7": "Response_Distribution_7",
									"8": "Response_Distribution_8",
									"9": "Response_Distribution_9",
									"10": "Response_Distribution_10",
									"Location": "Location",
									"Responses": "Responses",
									"Detractors": "Detractors_Percentage",
									"Passives": "Passives_Percentage",
									"Promoters": "Promoters_Percentage",
									"Score": "Score",
									"Avg. Response": "Avg_Response"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HR_Maclean_EXM_Location_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HR_Maclean_EXM_Location_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HR_Maclean_EXM_Location_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "V_HR_Maclean_EXM_Location_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactEXMSCORE_Location]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactEXMSCORE_Location",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactEXMSCORE_Location]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "HR"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactEXMSCORE_Region')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Region": "Region",
									"Responses": "Responses",
									"Detractors_Percentage": "Detractors_Percentage",
									"Passives_Percentage": "Passives_Percentage",
									"Promoters_Percentage": "Promoters_Percentage",
									"Score": "Score",
									"Avg_Response": "Avg_Response",
									"Response_Distribution_0": "Response_Distribution_0",
									"Response_Distribution_1": "Response_Distribution_1",
									"Response_Distribution_2": "Response_Distribution_2",
									"Response_Distribution_3": "Response_Distribution_3",
									"Response_Distribution_4": "Response_Distribution_4",
									"Response_Distribution_5": "Response_Distribution_5",
									"Response_Distribution_6": "Response_Distribution_6",
									"Response_Distribution_7": "Response_Distribution_7",
									"Response_Distribution_8": "Response_Distribution_8",
									"Response_Distribution_9": "Response_Distribution_9",
									"Response_Distribution_10": "Response_Distribution_10"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HR_Maclean_EXM_Region_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactEXMSCORE_Region_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HR_Maclean_EXM_Region_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HR_Maclean_EXM_Region_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactEXMSCORE_Region]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactEXMSCORE_Region",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactEXMSCORE_Region]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "HR"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactEmployee_Requisitions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactEmployee_Requisitions]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactEmployee_Requisitions"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactEmployee_Requisitions]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Job Req. ID": "Job_Req_ID",
									"Job Requisition Status": "New_Position",
									"Primary Location": "Job_Requisition_Status",
									"Cost Centre ID": "Primary_Location",
									"Country": "Country",
									"Worker Type": "Cost_Centre_ID",
									"Function": "Function",
									"Count of Active Candidates": "Worker_Type",
									"In Offer": "Count_of_Active_Candidates",
									"Number of Openings Not in Offer": "In_Offer",
									"Candidate Stage": "Candidate_Stage",
									"Internal Candidate?": "Internal_Candidate"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HR_WORKDAY_REQ_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HR_WORKDAY_REQ_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HR_WORKDAY_REQ_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HR_WORKDAY_REQ_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "HR"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactFinancial_Plan')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Account": "Account",
									"Account Type": "Account_Type",
									"Cost Centre": "Cost_Centre",
									"CC code": "CC_code",
									"Function": "Function",
									"Product Family": "Product_Family",
									"Product Line": "Product_Line",
									"Sub Region": "Sub_Region",
									"Region": "Region",
									"Source System": "Source_System",
									"Jun": "Jun",
									"Jul": "Jul",
									"Aug": "Aug",
									"Sep": "Sep",
									"Oct": "Oct",
									"Nov": "Nov",
									"Dec": "Dec",
									"Jan": "Jan",
									"Feb": "Feb",
									"Mar": "Mar",
									"Apr": "Apr",
									"May": "May"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Sales_FF_Forecast_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sales_FF_Forecast_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactFinancial_Plan]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactFinancial_Plan]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactFinancial_Plan",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sales_FF_Forecast_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sales_FF_Forecast_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Forecast"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactHC_Diversity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactHC_Diversity]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactHC_Diversity"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactHC_Diversity]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSetting",
									"wildcardFileName": "*.*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HR_WORKDAY_DIVERSITY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HR_WORKDAY_DIVERSITY_DEST",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HR_WORKDAY_DIVERSITY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HR_WORKDAY_DIVERSITY_ARCH_DEST",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "HR"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactOpportunity_All_incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Last Modified Record",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Last Created Record",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select\n id\n,Name\n,Ownerid\n,owner.name\n,Owner.Sub_Region__c\n,CloseDate\n,StageName\n,Deal_Type__c\n,MainProduct__c\n,OpportunityHEALTH__c\n,RLF_percent__c\n,Regional_Sales_Manager_Comments__c\n,Accountid\n,Account.Name\n,Opportunity_18chr_Id__c\n,Amount\n,Order_Number__c\n,Sales_Region_FY07__c\n,Pricing_Country__c\n,Misys_Forecast__c\n,Term_Estimate_Months__c\n,Commercial_Prop__c\n,ILF_Amount__c\n,Total_ILF_In_Qtr__c\n,Accretive_RLF__c\n,RLF_Amount__c\n,PS_Amount__c\n,ASP_Amount__c\n,TCV_CSH__c\n,ACV_ACV_Equiv_CSH__c\n,Strength_of_Sale__c\n,Global_Account_Manager_Comments__c\n,Executive_Sponsor_alignment__c\n,Next_Step_Due_Date__c\n,NextStep\n,Approval_Status__c\n,sbaa__ApprovalStatus__c\n,Term_CSH__c\n,Deal_Category__c\n,Service_Type__c\n,Service_Sub_Type__c\n,Campaignid\n,Opportunity_Partner__c\n,Original_Opportunity__c\n,RecordTypeid\n,RecordType.Name\n,LastModifiedDate\n,CreatedDate\n,Existing_RLF_Currency__c\n,CurrencyIsoCode\n,SBU_Strategic_Business_Unit__c\n,FiscalPeriod__c\n,Total_PS_Amount__c \n\nfrom Opportunity\n\nwhere CreatedDate >@{activity('Get Last Created Record').output.firstRow.Created}Z OR  LastModifiedDate >@{activity('Get Last Modified Record').output.firstRow.Modified}Z\n",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Opportunity_Incremental_load",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LND_SFDC_3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Last Modified Record",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select max(cast (Lastmodifieddate AS datetime)) AS Modified\n  FROM [STG].[Sales_SFDC_Booking]"
							},
							"dataset": {
								"referenceName": "Opportunity_Last_Load_Modified",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Last Created Record",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select max(cast (createddate AS datetime))  AS Created\n  FROM [STG].[Sales_SFDC_Booking]"
							},
							"dataset": {
								"referenceName": "Opportunity_Last_Load_Created",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select\n id\n,Name\n,Ownerid\n,owner.name\n,Owner.Sub_Region__c\n,CloseDate\n,StageName\n,Deal_Type__c\n,MainProduct__c\n,OpportunityHEALTH__c\n,RLF_percent__c\n,Regional_Sales_Manager_Comments__c\n,Accountid\n,Account.Name\n,Opportunity_18chr_Id__c\n,Amount\n,Order_Number__c\n,Sales_Region_FY07__c\n,Pricing_Country__c\n,Misys_Forecast__c\n,Term_Estimate_Months__c\n,Commercial_Prop__c\n,ILF_Amount__c\n,Total_ILF_In_Qtr__c\n,Accretive_RLF__c\n,RLF_Amount__c\n,PS_Amount__c\n,ASP_Amount__c\n,TCV_CSH__c\n,ACV_ACV_Equiv_CSH__c\n,Strength_of_Sale__c\n,Global_Account_Manager_Comments__c\n,Executive_Sponsor_alignment__c\n,Next_Step_Due_Date__c\n,NextStep\n,Approval_Status__c\n,sbaa__ApprovalStatus__c\n,Term_CSH__c\n,Deal_Category__c\n,Service_Type__c\n,Service_Sub_Type__c\n,Campaignid\n,Opportunity_Partner__c\n,Original_Opportunity__c\n,RecordTypeid\n,RecordType.Name\n,LastModifiedDate\n,CreatedDate\n,Existing_RLF_Currency__c\n,CurrencyIsoCode\n,SBU_Strategic_Business_Unit__c\n,FiscalPeriod__c\n\nfrom Opportunity\n\nwhere CreatedDate >@{activity('Get Last Created Record').output.firstRow.Created}Z OR  LastModifiedDate >@{activity('Get Last Modified Record').output.firstRow.Modified}Z\n",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Opportunity_Incremental_load",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Opportunity_Incremintal_Archiving",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_Fact_Opportunity_All]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactSales_SFDC_Booking"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFact_Opportunity_All]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Sales"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactOpportunity_All_initial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables Created date",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading STG tables LST_Modified2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": "select id\n,Name\n,Ownerid\n,owner.name\n,Owner.Sub_Region__c\n,CloseDate\n,StageName\n,Deal_Type__c\n,MainProduct__c\n,OpportunityHEALTH__c\n,RLF_percent__c\n,Regional_Sales_Manager_Comments__c\n,Accountid\n,Account.Name\n,Opportunity_18chr_Id__c\n,Amount\n,Order_Number__c\n,Sales_Region_FY07__c\n,Pricing_Country__c\n,Misys_Forecast__c\n,Term_Estimate_Months__c\n,Commercial_Prop__c\n,ILF_Amount__c\n,Total_ILF_In_Qtr__c\n,Accretive_RLF__c\n,RLF_Amount__c\n,PS_Amount__c\n,ASP_Amount__c\n,TCV_CSH__c\n,ACV_ACV_Equiv_CSH__c\n,Strength_of_Sale__c\n,Global_Account_Manager_Comments__c\n,Executive_Sponsor_alignment__c\n,Next_Step_Due_Date__c\n,NextStep\n,Approval_Status__c\n,sbaa__ApprovalStatus__c\n,Term_CSH__c\n,Deal_Category__c\n,Service_Type__c\n,Service_Sub_Type__c\n,Campaignid\n,Opportunity_Partner__c\n,Original_Opportunity__c\n,RecordTypeid\n,RecordType.Name\n,LastModifiedDate\n,CreatedDate\n,Existing_RLF_Currency__c\n,CurrencyIsoCode\n,SBU_Strategic_Business_Unit__c\n,FiscalPeriod__c\n,Total_PS_Amount__c \n\nfrom Opportunity\nwhere DAY_ONLY(CreatedDate) >=2017-06-01\n\n\n\n\n",
								"readBehavior": "query"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "Salesforce_Opportunity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LND_SFDC_1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SFDC_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SFDC_Archive_Opportunity",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables Created date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_Fact_Opportunity_All]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactSales_SFDC_Booking"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFact_Opportunity_All]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading STG tables LST_Modified",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": "select id\n,Name\n,Ownerid\n,owner.name\n,Owner.Sub_Region__c\n,CloseDate\n,StageName\n,Deal_Type__c\n,MainProduct__c\n,OpportunityHEALTH__c\n,RLF_percent__c\n,Regional_Sales_Manager_Comments__c\n,Accountid\n,Account.Name\n,Opportunity_18chr_Id__c\n,Amount\n,Order_Number__c\n,Sales_Region_FY07__c\n,Pricing_Country__c\n,Misys_Forecast__c\n,Term_Estimate_Months__c\n,Commercial_Prop__c\n,ILF_Amount__c\n,Total_ILF_In_Qtr__c\n,Accretive_RLF__c\n,RLF_Amount__c\n,PS_Amount__c\n,ASP_Amount__c\n,TCV_CSH__c\n,ACV_ACV_Equiv_CSH__c\n,Strength_of_Sale__c\n,Global_Account_Manager_Comments__c\n,Executive_Sponsor_alignment__c\n,Next_Step_Due_Date__c\n,NextStep\n,Approval_Status__c\n,sbaa__ApprovalStatus__c\n,Term_CSH__c\n,Deal_Category__c\n,Service_Type__c\n,Service_Sub_Type__c\n,Campaignid\n,Opportunity_Partner__c\n,Original_Opportunity__c\n,RecordTypeid\n,RecordType.Name\n,LastModifiedDate\n,CreatedDate\n,Existing_RLF_Currency__c\n,CurrencyIsoCode\n,SBU_Strategic_Business_Unit__c\n,FiscalPeriod__c\n,Total_PS_Amount__c \n\nfrom Opportunity\nwhere DAY_ONLY(LastModifiedDate) >=2017-06-01 and DAY_ONLY(LastModifiedDate) <= 2018-10-08\n",
								"readBehavior": "query"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Salesforce_Opportunity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LND_SFDC_1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading STG tables LST_Modified2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading STG tables LST_Modified",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": "select id\n,Name\n,Ownerid\n,owner.name\n,Owner.Sub_Region__c\n,CloseDate\n,StageName\n,Deal_Type__c\n,MainProduct__c\n,OpportunityHEALTH__c\n,RLF_percent__c\n,Regional_Sales_Manager_Comments__c\n,Accountid\n,Account.Name\n,Opportunity_18chr_Id__c\n,Amount\n,Order_Number__c\n,Sales_Region_FY07__c\n,Pricing_Country__c\n,Misys_Forecast__c\n,Term_Estimate_Months__c\n,Commercial_Prop__c\n,ILF_Amount__c\n,Total_ILF_In_Qtr__c\n,Accretive_RLF__c\n,RLF_Amount__c\n,PS_Amount__c\n,ASP_Amount__c\n,TCV_CSH__c\n,ACV_ACV_Equiv_CSH__c\n,Strength_of_Sale__c\n,Global_Account_Manager_Comments__c\n,Executive_Sponsor_alignment__c\n,Next_Step_Due_Date__c\n,NextStep\n,Approval_Status__c\n,sbaa__ApprovalStatus__c\n,Term_CSH__c\n,Deal_Category__c\n,Service_Type__c\n,Service_Sub_Type__c\n,Campaignid\n,Opportunity_Partner__c\n,Original_Opportunity__c\n,RecordTypeid\n,RecordType.Name\n,LastModifiedDate\n,CreatedDate\n,Existing_RLF_Currency__c\n,CurrencyIsoCode\n,SBU_Strategic_Business_Unit__c\n,FiscalPeriod__c\n,Total_PS_Amount__c \n\nfrom Opportunity\nwhere DAY_ONLY(LastModifiedDate) >=2018-10-10\n",
								"readBehavior": "query"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Salesforce_Opportunity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LND_SFDC_1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Sales"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactRevenue_Cost')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Finance/OD April 17th v2.1.csv"
							},
							{
								"name": "Destination",
								"value": "[[STG].[Finace_FF_Revenue&Cost]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Account": "Account",
									"Account Type": "Account_Type",
									"Cost Centre": "Cost_Centre",
									"CC code": "CC_Code",
									"Function": "Function",
									"Product Family": "Product_Family",
									"Product Line": "Product_line",
									"Sub Region": "Sub_Region",
									"Region": "Region",
									"Source System": "Source_System",
									"Jun": "Jun",
									"Jul": "Jul",
									"Aug": "Aug",
									"Sep": "Sep",
									"Oct": "Oct",
									"Nov": "Nov",
									"Dec": "Dec",
									"Jan": "Jan",
									"Feb": "Feb",
									"Mar": "Mar",
									"Apr": "Apr",
									"May": "May"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Revenue_cost_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Revenue_cost_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactFinanceRevenue_Cost]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactFinanceRevenue_Cost",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactFinanceRevenue_Cost]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Revenue_cost_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Revenue_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dbo data backup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Finace_RevenueCost_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finace_RevenueCost_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Finance"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactRevenue_Cost_History')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Finance/OD April 17th v2.1.csv"
							},
							{
								"name": "Destination",
								"value": "[[STG].[Finace_FF_Revenue&Cost]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Revenue_cost_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Revenue_cost_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactFinance_Cash]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactFinanceRevenue_Cost",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactFinanceRevenue_Cost]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Revenue_cost_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Revenue_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dbo data backup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Finace_RevenueCost_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finace_RevenueCost_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Finance"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactSALES_MSCRM_Bookings')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables Actuals Detail Q1 - Q3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactSALES_MSCRM_Bookings]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactSALES_MSCRM_Bookings"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactSALES_MSCRM_Bookings]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading STG tables Actuals Detail Q1 - Q3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"GL Period": "GL_Period",
									"TransID": "TransID",
									"Region": "Region",
									"Softrax": "Softrax",
									"Name": "Name",
									"Sales Rep": "Sales_Rep",
									"LOB": "LOB",
									"Product": "Product",
									"Booking ACV": "Booking_ACV",
									"Renewal ACV": "Renewal_ACV"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Booking_Actuals",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sales_MSCRM_Booking_Actual",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sales_MSCRM_Booking_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sales_MSCRM_Booking_Archive_DL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Sales"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactSALES_MSCRM_Orderbook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loading Int tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading STG tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_FactSALES_MSCRM_Orderbook]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Hash Generate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Int tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_GenerateHashes]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "FactSALES_MSCRM_Orderbook"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading dbo table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Hash Generate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_INT_ApplyFactSALES_MSCRM_Orderbook]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_finastra",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Loading STG tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"accountid (Custom_SQL_Query)": "Accountid (Custom_SQL_Query)",
									"AccountName": "AccountName",
									"Createdon (DAY)": "Createdon (DAY)",
									"Estimated Close Date (DAY)": "Estimated Close Date (DAY)",
									"Modifiedon (DAY)": "Modifiedon (DAY)",
									"Employeeid": "Employeeid",
									"Forecast Category": "Forecast Category",
									"LOB": "LOB",
									"Main Product": "Main Product",
									"Name": "Name",
									"Opportunityid": "Opportunityid",
									"Quarter": "Quarter",
									"Region": "Region",
									"Sale Type": "Sale Type",
									"Sales Rep": "Sales Rep",
									"Sales Stage": "Sales Stage",
									"Statecodename": "Statecodename",
									"ACV + ACV Equiv (AVG)": "ACV + ACV Equiv (AVG)",
									"ACV Booking (AVG)": "ACV Booking (AVG)",
									"ACV Renewal (AVG)": "ACV Renewal (AVG)",
									"Contract Term (Months) (AVG)": "Contract Term (Months) (AVG)",
									"ILF (AVG)": "ILF (AVG)",
									"Services (AVG)": "Services (AVG)",
									"Term in Years (AVG)": "Term in Years (AVG)"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Sales_MSCRM_OrderBook_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sales_MSCRM_OrderBook_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Loading dbo table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sales_MSCRM_OrderBook_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sales_MSCRM_OrderBook_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Sales"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Marketing_Sunny')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT\nOpportunity_18chr_Id__c,\nName,\nOpportunity_Number__c,\nAccountId,\nSales_Region_FY07__c,\nStatus__c,\nStageName,\nProbability,\nDate_opportunity_moved_to_SS2__c,\nDate_opportunity_moved_to_SS4__c,\nILF_CommValue_CSH__c,\nACV_ACV_Equiv_CSH__c,\nCreatedDate,\nLastModifiedDate\nFROM Opportunity\n\n\n\n\n",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Opportunity_18chr_Id__c": "Opportunity_18chr_Id",
									"Name": "Name",
									"Opportunity_Number__c": "Opportunity_Number",
									"AccountId": "AccountId",
									"Sales_Region_FY07__c": "Sales_Region_FY07",
									"Status__c": "Status",
									"StageName": "StageName",
									"Probability": "Probability",
									"Date_opportunity_moved_to_SS2__c": "Date_opportunity_moved_to_SS2",
									"Date_opportunity_moved_to_SS4__c": "Date_opportunity_moved_to_SS4",
									"ILF_CommValue_CSH__c": "ILF_CommValue_CSH",
									"ACV_ACV_Equiv_CSH__c": "ACV_ACV_Equiv_CSH",
									"IST_Rep": "IST_Rep",
									"CreatedDate": "CreatedDate",
									"LastModifiedDate": "LastModifiedDate"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Salesforce_Marketing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Marketing_Stg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Sunny"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TimeDimension')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"FISCAL_PERIOD_SKEY": "FISCAL_PERIOD_SKEY",
									"FISCAL_PERIOD_CREAT_DT": "FISCAL_PERIOD_CREAT_DT",
									"FISCAL_PERIOD_LAST_UPD_DT": "FISCAL_PERIOD_LAST_UPD_DT",
									"FISC_PERIOD_BKEY": "FISC_PERIOD_BKEY",
									"FISC_PERIOD_CAPTION": "FISC_PERIOD_CAPTION",
									"FISC_PERIOD_CODE": "FISC_PERIOD_CODE",
									"FISC_PERIOD_NAME": "FISC_PERIOD_NAME",
									"FISC_PERIOD_SERIES": "FISC_PERIOD_SERIES",
									"FISC_PERIOD_BEG_DT": "FISC_PERIOD_BEG_DT",
									"FISC_PERIOD_END_DT": "FISC_PERIOD_END_DT",
									"FISC_QTR_BKEY": "FISC_QTR_BKEY",
									"FISC_QTR_CAPTION": "FISC_QTR_CAPTION",
									"FISC_QTR_CODE": "FISC_QTR_CODE",
									"FISC_QTR_NAME": "FISC_QTR_NAME",
									"FISC_QTR_SERIES": "FISC_QTR_SERIES",
									"FISC_QTR_BEG_DT": "FISC_QTR_BEG_DT",
									"FISC_QTR_END_DT": "FISC_QTR_END_DT",
									"FISC_HALF_YEAR_BKEY": "FISC_HALF_YEAR_BKEY",
									"FISC_HALF_YEAR_CAPTION": "FISC_HALF_YEAR_CAPTION",
									"FISC_HALF_YEAR_CODE": "FISC_HALF_YEAR_CODE",
									"FISC_HALF_YEAR_NAME": "FISC_HALF_YEAR_NAME",
									"FISC_HALF_YEAR_SERIES": "FISC_HALF_YEAR_SERIES",
									"FISC_HALF_YEAR_BEG_DT": "FISC_HALF_YEAR_BEG_DT",
									"FISC_HALF_YEAR_END_DT": "FISC_HALF_YEAR_END_DT",
									"FISC_YEAR_BKEY": "FISC_YEAR_BKEY",
									"FISC_YEAR_CAPTION": "FISC_YEAR_CAPTION",
									"FISC_YEAR_CODE": "FISC_YEAR_CODE",
									"FISC_YEAR_SERIES": "FISC_YEAR_SERIES",
									"FISC_YEAR_BEG_DT": "FISC_YEAR_BEG_DT",
									"FISC_YEAR_END_DT": "FISC_YEAR_END_DT",
									"FISC_YEAR_NAME": "FISC_YEAR_NAME",
									"CAL_MONTH_BKEY": "CAL_MONTH_BKEY",
									"CAL_MONTH_CAPTION": "CAL_MONTH_CAPTION",
									"CAL_MONTH_CODE": "CAL_MONTH_CODE",
									"CAL_MONTH_NAME": "CAL_MONTH_NAME",
									"CAL_MONTH_SERIES": "CAL_MONTH_SERIES",
									"CAL_MONTH_BEG_DT": "CAL_MONTH_BEG_DT",
									"CAL_MONTH_END_DT": "CAL_MONTH_END_DT",
									"CAL_QTR_BKEY": "CAL_QTR_BKEY",
									"CAL_QTR_CAPTION": "CAL_QTR_CAPTION",
									"CAL_QTR_CODE": "CAL_QTR_CODE",
									"CAL_QTR_NAME": "CAL_QTR_NAME",
									"CAL_QTR_SERIES": "CAL_QTR_SERIES",
									"CAL_QTR_BEG_DT": "CAL_QTR_BEG_DT",
									"CAL_QTR_END_DT": "CAL_QTR_END_DT",
									"CAL_HALF_YEAR_BKEY": "CAL_HALF_YEAR_BKEY",
									"CAL_HALF_YEAR_CAPTION": "CAL_HALF_YEAR_CAPTION",
									"CAL_HALF_YEAR_CODE": "CAL_HALF_YEAR_CODE",
									"CAL_HALF_YEAR_NAME": "CAL_HALF_YEAR_NAME",
									"CAL_HALF_YEAR_SERIES": "CAL_HALF_YEAR_SERIES",
									"CAL_HALF_YEAR_BEG_DT": "CAL_HALF_YEAR_BEG_DT",
									"CAL_HALF_YEAR_END_DT": "CAL_HALF_YEAR_END_DT",
									"CAL_YEAR_BKEY": "CAL_YEAR_BKEY",
									"CAL_YEAR_CAPTION": "CAL_YEAR_CAPTION",
									"CAL_YEAR_CODE": "CAL_YEAR_CODE",
									"CAL_YEAR_SERIES": "CAL_YEAR_SERIES",
									"CAL_YEAR_BEG_DT": "CAL_YEAR_BEG_DT",
									"CAL_YEAR_END_DT": "CAL_YEAR_END_DT",
									"CAL_YEAR_NAME": "CAL_YEAR_NAME",
									"SOURCE_SYSTEM": "SOURCE_SYSTEM"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TimeDimension_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TimeDimension_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archiving data in DL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TimeDimension_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TimeDimension_Archive_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Time"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactOpportunity_All Job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Campaign",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimSales_SFDC_Campaign_incremental",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					},
					{
						"name": "FXRate_Conversion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Campaign",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimSales_SFDC_FXRate_Conversion_incremental",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					},
					{
						"name": "Opportunity",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FXRate_Conversion",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactOpportunity_All_incremental",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "ETL Jobs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FactOpportunity_All_incremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Search for file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "test",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "d",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetMetadata2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('GetMetadata2').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait3",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FactOpportunity_All_incremental",
											"type": "PipelineReference"
										},
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "GetMetadata2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "test",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "GetMetadata2",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Get Metadata1').output.exists)",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item(),'xx')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"exists": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FactOpportunity_All_incremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clean Old Landing Files Job-Monthly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Delete old Landing Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2019-06-01T23:59:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly Job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FactSALES_MSCRM_Bookings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactOpportunity_All",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactSALES_MSCRM_Bookings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactSALES_MSCRM_Orderbook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactSALES_MSCRM_Bookings",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactSALES_MSCRM_Orderbook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactEXMSCORE_Location",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactSALES_MSCRM_Orderbook",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactEXMSCORE_Location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactEXMSCORE_Region",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactEXMSCORE_Location",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactEXMSCORE_Region",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DimEmployee",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DimEmployee_Future_Termination",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimEmployee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactOpportunity_All",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactOpportunity_All Job",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactEmployee_Requisitions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FACTEXMSCORE",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactEmployee_Requisitions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DimEmployee_Termination",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactEmployee_Requisitions",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimEmployee_Terminations",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactEXMSCORE_Gender",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactEXMSCORE_Region",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactEXMSCORE_Gender",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactEXMSCORE_Age_Group",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactEXMSCORE_Gender",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactEXMSCORE_Age_Group",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FACTEXMSCORE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FactEXMSCORE_Age_Group",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactEXMSCORE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DimEmployee_Future-hires",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DimEmployee_Termination",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimEmployee_Future_Hires",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DimEmployee_Future_Termination",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DimEmployee_Future-hires",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DimEmployee_Future_Termiantions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FactHC_Diversity",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DimEmployee",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FactHC_Diversity",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "ETL Jobs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FactSALES_MSCRM_Bookings')]",
				"[concat(variables('factoryId'), '/pipelines/FactSALES_MSCRM_Orderbook')]",
				"[concat(variables('factoryId'), '/pipelines/FactEXMSCORE_Location')]",
				"[concat(variables('factoryId'), '/pipelines/FactEXMSCORE_Region')]",
				"[concat(variables('factoryId'), '/pipelines/FactOpportunity_All Job')]",
				"[concat(variables('factoryId'), '/pipelines/FactEmployee_Requisitions')]",
				"[concat(variables('factoryId'), '/pipelines/FactEXMSCORE_Gender')]",
				"[concat(variables('factoryId'), '/pipelines/FactHC_Diversity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FactOpportunity_All Job",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-04-21T01:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FactOpportunity_All Job')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly Job')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Weekly Job",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2019-05-23T23:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weekly Job')]"
			]
		}
	]
}