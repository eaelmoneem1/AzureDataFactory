{
	"name": "DimMarketing_SFDC_Opportunity_Incremental",
	"properties": {
		"activities": [
			{
				"name": "Landing",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Last Modified Record",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Last Created Record",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": {
							"value": "SELECT\nOpportunity_18chr_Id__c,\nName,\nOpportunity_Number__c,\nAccountId,\nSales_Region_FY07__c,\nStatus__c,\nStageName,\nProbability,\nDate_opportunity_moved_to_SS2__c,\nDate_opportunity_moved_to_SS4__c,\nILF_CommValue_CSH__c,\nACV_ACV_Equiv_CSH__c,\nIST_Rep,\nCreatedDate,\nLastModifiedDate\nFROM Opportunity\n\nwhere CreatedDate >@{activity('Get Last Created Record').output.firstRow.Created}Z OR  LastModifiedDate >@{activity('Get Last Modified Record').output.firstRow.Modified}Z\n\n\n",
							"type": "Expression"
						},
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlSink",
						"writeBatchSize": 10000
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"columnMappings": {
							"Opportunity_18chr_Id__c": "Opportunity_18chr_Id",
							"Name": "Name",
							"Opportunity_Number__c": "Opportunity_Number",
							"AccountId": "AccountId",
							"Sales_Region_FY07__c": "Sales_Region_FY07",
							"Status__c": "Status",
							"StageName": "StageName",
							"Probability": "Probability",
							"Date_opportunity_moved_to_SS2__c": "Date_opportunity_moved_to_SS2",
							"Date_opportunity_moved_to_SS4__c": "Date_opportunity_moved_to_SS4",
							"ILF_CommValue_CSH__c": "ILF_CommValue_CSH",
							"ACV_ACV_Equiv_CSH__c": "ACV_ACV_Equiv_CSH",
							"IST_Rep": "IST_Rep",
							"CreatedDate": "CreatedDate",
							"LastModifiedDate": "LastModifiedDate"
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Salesforce_Marketing",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Marketing_Stg",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Get Last Modified Record",
				"type": "Lookup",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(cast (Lastmodifieddate AS datetime)) AS Modified\n  FROM [STG].[Marketing_SFDC_Opportunity]"
					},
					"dataset": {
						"referenceName": "Marketing_Opportunity_Source",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Last Created Record",
				"type": "Lookup",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(cast (createddate AS datetime))  AS Created\n  FROM [STG].[Marketing_SFDC_Opportunity]"
					},
					"dataset": {
						"referenceName": "Marketing_Opportunity_Source",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Archiving",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Loading dbo table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource"
					},
					"sink": {
						"type": "AzureDataLakeStoreSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "AzureSqlTable11",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureDataLakeStoreFile2",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Loading dbo table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Hash Generate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_INT_ApplyDimMarketing_SFDC_Opportunity]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_finastra",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Hash Generate",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Loading Int tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_INT_GenerateHashes]",
					"storedProcedureParameters": {
						"TableName": {
							"value": "DimMarketing_SFDC_Opportunity",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_finastra",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Loading Int tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Landing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_INT_DimMarketing_SFDC_Opportunity]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_finastra",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Marketing"
		}
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}